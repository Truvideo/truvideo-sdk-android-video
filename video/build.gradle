plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'com.google.devtools.ksp'
}

def propertiesFile = rootProject.file("video/src/main/assets/version.properties")
def properties = new Properties()
properties.load(new FileInputStream(propertiesFile))

android {
    namespace 'com.truvideo.sdk.video'
    compileSdk 34

    defaultConfig {
        minSdk 24
        targetSdk 34
        versionCode properties.getProperty("versionCode").toInteger()
        versionName properties.getProperty("versionName")
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        compose true
        buildConfig = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    ksp {
        arg('room.schemaLocation', "$projectDir/schemas")
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.5.3'
    }

    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    flavorDimensions = ['environments']

    productFlavors {
        beta {
            dimension 'environments'
        }
        rc {
            dimension 'environments'
        }
        prod {
            dimension 'environments'
        }
    }
}

dependencies {
    implementation "androidx.startup:startup-runtime:1.1.1"

    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.7.0'
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.0"

    // Compose
    implementation "androidx.activity:activity-compose:1.9.0"
    implementation "androidx.compose.ui:ui:1.6.7"
    implementation "androidx.compose.ui:ui-graphics:1.6.7"
    implementation "androidx.compose.ui:ui-tooling-preview:1.6.7"
    implementation "androidx.compose.material3:material3:1.2.1"
    implementation "androidx.compose.material:material-icons-extended:1.6.7"
    debugImplementation "androidx.compose.ui:ui-tooling:1.6.7"
    debugImplementation "androidx.compose.ui:ui-test-manifest:1.6.7"

    // Krisp
    implementation 'com.github.Truvideo:truvideo-sdk-android-krisp:1.0.0'

    // FFmpeg
    implementation 'com.arthenica:mobile-ffmpeg-min-gpl:4.4'

    // Room
    implementation "androidx.room:room-runtime:2.6.1"
    annotationProcessor "androidx.room:room-compiler:2.6.1"
    ksp "androidx.room:room-compiler:2.6.1"

    // Test
    testImplementation 'junit:junit:4.13.2'
    testImplementation "androidx.test:core:1.5.0"
    testImplementation "org.mockito:mockito-core:5.4.0"
    testImplementation "org.mockito.kotlin:mockito-kotlin:5.0.0"
    testImplementation "io.mockk:mockk:1.13.5"
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // Exoplayer
    implementation "androidx.media3:media3-exoplayer:1.3.1"
    implementation "androidx.media3:media3-ui:1.3.1"

    // Truvideo SDK Common
    var commonVersion = properties.getProperty("commonVersion")
    implementation("com.github.truvideo:truvideo-sdk-android-common:$commonVersion")

    // Truvideo SDK Components
    implementation 'com.github.truvideo:truvideo-sdk-android-components:0.1.11'
}

project.afterEvaluate {
    publishing {
        publications {
            library(MavenPublication) {
                setGroupId 'com.truvideo'
                setArtifactId 'sdk-video'
                version android.defaultConfig.versionName

                def environment = properties.getProperty("environment")
                if (environment == "beta") {
                    artifact bundleBetaReleaseAar
                } else if (environment == "rc") {
                    artifact bundleRcReleaseAar
                } else {
                    artifact bundleProdReleaseAar
                }

                pom.withXml {
                    //noinspection GroovyImplicitNullArgumentCall
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.implementation.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}